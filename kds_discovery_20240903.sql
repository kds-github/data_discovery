-- ************************* SqlDBM: PostgreSQL *************************
-- **** Generated by SqlDBM: kds_discovery by kDS ***


CREATE SCHEMA admin;

CREATE SCHEMA analysis;

CREATE SCHEMA client;

CREATE SCHEMA interview;

CREATE SCHEMA load;

CREATE SCHEMA model;

CREATE SCHEMA reference;

CREATE SCHEMA stage;

CREATE SCHEMA temp;

-- ************************************** load.subsidiary
CREATE TABLE load.subsidiary
(
 parent_           varchar(96) NOT NULL,
 name_             varchar(96) NOT NULL,
 organization_type varchar(32) NULL,
 ticker_           varchar(8) NULL,
 nasic_code        varchar(8) NULL,
 product_service   varchar(72) NULL,
 annual_revenue    numeric(15, 2) NULL,
 employee_total    int NULL,
 website_          varchar(92) NULL,
 location_         varchar(48) NULL,
 source_           varchar(48) NOT NULL,
 create_date       date NOT NULL,
 created_by        varchar(92) NOT NULL,
 modified_date     date NULL,
 modified_by       varchar(92) NULL

);


-- ************************************** stage.subsidiary
CREATE TABLE stage.subsidiary
(
 name_             varchar(96) NOT NULL,
 parent_name       varchar(96) NOT NULL,
 organization_type varchar(32) NULL,
 ticker_           varchar(8) NULL,
 nasic_code        varchar(8) NULL,
 product_service   varchar(32) NULL,
 annual_revenue    numeric(15, 2) NULL,
 employee_total    int NULL,
 website_          varchar(92) NULL,
 location_         varchar(48) NULL,
 source_           varchar(48) NOT NULL,
 create_date       date NOT NULL,
 created_by        varchar(92) NOT NULL,
 modified_date     date NULL,
 modified_by       varchar(92) NULL,
 hash_key          varchar(32) NULL,
 CONSTRAINT PK_stage_sub PRIMARY KEY ( name_, parent_name )
);


-- ************************************** model.role
CREATE TABLE model.role
(
 role_id       uuid NOT NULL DEFAULT gen_random_uuid(),
 name_         varchar(92) NOT NULL,
 create_date   date NOT NULL DEFAULT CURRENT_DATE,
 created_by    varchar(92) NULL,
 modified_by   varchar(92) NULL,
 modified_date date NULL,
 CONSTRAINT PK_model_role PRIMARY KEY ( role_id )
);


-- ************************************** client.resource
CREATE TABLE client.resource
(
 resource_id   uuid NOT NULL DEFAULT gen_random_uuid(),
 description_  varchar NOT NULL,
 create_date   date NOT NULL,
 created_by    varchar NOT NULL,
 modified_date varchar NULL,
 modified_by   varchar NULL,
 hash_value    bytea NOT NULL,
 CONSTRAINT PK_resource PRIMARY KEY ( resource_id )
);


-- ************************************** stage.parent
CREATE TABLE stage.parent
(
 name_             character varying(96) NOT NULL,
 organization_type character varying(32) NULL,
 ticker_           character varying(8) NULL,
 nasic_code        character varying(8) NOT NULL,
 product_service   character varying(128) NULL,
 annual_revenue    numeric(15,2) NULL,
 employee_total    integer NULL,
 website_          character varying(92) NULL,
 location_         character varying(48) NULL,
 source_           character varying(48) NOT NULL,
 create_date       date NOT NULL,
 created_by        character varying(92) NOT NULL,
 modified_date     date NULL,
 modified_by       character varying(92) NULL,
 parent_id         uuid NULL,
 CONSTRAINT pk_stage_parent PRIMARY KEY ( name_, nasic_code )
);


-- ************************************** load.parent
CREATE TABLE load.parent
(
 name_             varchar(96) NOT NULL,
 organization_type varchar(32) NULL,
 ticker_           varchar(8) NULL,
 nasic_code        varchar(8) NULL,
 product_service   varchar(128) NULL,
 annual_revenue    numeric(15, 2) NULL,
 employee_total    int NULL,
 website_          varchar(92) NULL,
 location_         varchar(48) NULL,
 source_           varchar(48) NOT NULL,
 create_date       date NOT NULL,
 created_by        varchar(92) NOT NULL,
 modified_date     date NULL,
 modified_by       varchar(92) NULL

);


-- ************************************** client.parent
CREATE TABLE client.parent
(
 parent_id         uuid NOT NULL DEFAULT gen_random_uuid(),
 name_             varchar(96) NOT NULL,
 organization_type varchar(32) NULL,
 ticker_           varchar(8) NULL,
 nasic_code        varchar(8) NULL,
 product_service   varchar(128) NULL,
 annual_revenue    numeric(15, 2) NULL,
 employee_total    integer NULL,
 website_          varchar(128) NOT NULL,
 location_         varchar(96) NULL,
 source_           varchar(48) NOT NULL,
 create_date       date NOT NULL,
 created_by        varchar(92) NOT NULL,
 modified_date     date NULL,
 modified_by       varchar(92) NULL,
 hash_value        bytea NULL,
 CONSTRAINT PK_parent PRIMARY KEY ( parent_id )
);


-- ************************************** stage.model_question
CREATE TABLE stage.model_question
(
 question_id        uuid NOT NULL DEFAULT gen_random_uuid(),
 nasic_code         varchar(8) NOT NULL,
 business_unit      varchar(96) NOT NULL,
 role_              varchar(96) NOT NULL,
 model_topic        varchar(96) NOT NULL,
 topic_             varchar(96) NOT NULL,
 subtopic_          varchar(96) NULL,
 syntax_            jsonb NOT NULL,
 help_              jsonb NULL,
 type_              varchar(32) NOT NULL,
 sort_order         smallint NOT NULL,
 location_reference varchar(96) NULL,
 create_date        date NOT NULL,
 modified_date      date NULL,
 source_            varchar(92) NULL,
 CONSTRAINT PK_34 PRIMARY KEY ( question_id )
);


-- ************************************** load.model_question
CREATE TABLE load.model_question
(
 nasic_code         varchar(8) NOT NULL,
 business_unit      varchar(96) NOT NULL,
 role_              varchar(96) NOT NULL,
 model_topic        varchar(96) NOT NULL,
 topic_             varchar(96) NOT NULL,
 subtopic_          varchar(96) NULL,
 syntax_            varchar(1024) NOT NULL,
 help_              varchar(1024) NULL,
 type_              varchar(32) NOT NULL,
 sort_order         smallint NOT NULL,
 location_reference varchar(96) NULL,
 create_date        date NOT NULL,
 modified_date      date NULL,
 source_            varchar(96) NULL

);


-- ************************************** load.model
CREATE TABLE load.model
(
 nasic_code    varchar(8) NOT NULL,
 biz_unit      varchar(96) NOT NULL,
 role_         varchar(96) NOT NULL,
 create_date   date NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL

);


-- ************************************** stage.model
CREATE TABLE stage.model
(
 nasic_code    varchar(8) NOT NULL,
 biz_unit      varchar(96) NOT NULL,
 role_         varchar(96) NOT NULL,
 create_date   date NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL,
 hash_key      varchar(32) NULL,
 CONSTRAINT PK_stage_model PRIMARY KEY ( nasic_code, biz_unit, role_ )
);


-- ************************************** reference.location
CREATE TABLE reference.location
(
 location_hash_id     varchar(32) NOT NULL,
 latitude_longitude   point NOT NULL,
 description_         varchar(64) NOT NULL,
 address_1            varchar(72) NULL,
 address_2            varchar(72) NULL,
 city_                varchar(72) NULL,
 province_state       varchar(32) NULL,
 postal_code          varchar(10) NOT NULL,
 country_code         varchar(4) NOT NULL,
 source_              varchar(72) NOT NULL,
 effective_start_date date NOT NULL,
 effective_end_date   date NULL

);


-- ************************************** load.industry
CREATE TABLE load.industry
(
 nasic_code   varchar(8) NOT NULL,
 description_ varchar(128) NOT NULL

);


-- ************************************** stage.industry
CREATE TABLE stage.industry
(
 nasic_code   varchar(8) NOT NULL,
 description_ varchar(128) NOT NULL,
 CONSTRAINT PK_stage_nasic PRIMARY KEY ( nasic_code )
);


-- ************************************** model.industry
CREATE TABLE model.industry
(
 nasic_code   varchar(8) NOT NULL,
 description_ varchar(128) NOT NULL,
 CONSTRAINT PK_industry PRIMARY KEY ( nasic_code )
);


-- ************************************** client.function
CREATE TABLE client.function
(
 function_id   uuid NOT NULL DEFAULT gen_random_uuid(),
 description_  varchar(64) NOT NULL,
 create_date   date NOT NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(92) NULL,
 hash_value    bytea NOT NULL,
 CONSTRAINT PK_function PRIMARY KEY ( function_id )
);


-- ************************************** temp.discovery_plan
CREATE TABLE temp.discovery_plan
(
 name_        varchar(72) NOT NULL,
 cost_        money NOT NULL,
 created_date date NOT NULL

);


-- ************************************** admin.discovery_plan
CREATE TABLE admin.discovery_plan
(
 plan_id uuid NOT NULL,
 name_   varchar(72) NOT NULL,
 cost_   money NOT NULL,
 CONSTRAINT PK_stage_plan PRIMARY KEY ( plan_id, name_ )
);


-- ************************************** stage.contact
CREATE TABLE stage.contact
(
 email_             varchar(128) NOT NULL,
 parent_            varchar(96) NOT NULL,
 business_unit      varchar(96) NOT NULL,
 subsidiary_        varchar(96) NULL,
 title_             varchar(64) NULL,
 role_              varchar(50) NOT NULL,
 respondent_        varchar(12) NULL,
 project_sponsor    varchar(12) NOT NULL,
 first_name         varchar(48) NULL,
 last_name          varchar(32) NULL,
 location_reference varchar(96) NULL,
 phone_             varchar(16) NULL,
 create_date        date NOT NULL,
 created_by         varchar(92) NOT NULL,
 modified_date      date NULL,
 modified_by        varchar(92) NULL,
 hash_key           varchar(32) NULL,
 CONSTRAINT PK_client_contact PRIMARY KEY ( email_, parent_, business_unit )
);


-- ************************************** load.contact
CREATE TABLE load.contact
(
 email_          varchar(128) NOT NULL,
 parent_         varchar(96) NOT NULL,
 subsidiary_     varchar(96) NULL,
 business_unit   varchar(96) NOT NULL,
 nasic_code      varchar(8) NOT NULL,
 title_          varchar(64) NULL,
 role_           varchar(50) NOT NULL,
 respondent_     varchar(12) NOT NULL,
 project_sponsor varchar(12) NOT NULL,
 first_name      varchar(32) NULL,
 last_name       varchar(92) NOT NULL,
 location_       varchar(48) NULL,
 phone_          varchar(16) NULL,
 create_date     date NOT NULL,
 created_by      varchar(92) NOT NULL,
 modified_date   date NULL,
 modified_by     varchar(92) NULL

);


-- ************************************** stage.business_unit
CREATE TABLE stage.business_unit
(
 name_         varchar(96) NOT NULL,
 parent_       varchar(96) NOT NULL,
 subsidiary_   varchar(96) NULL,
 create_date   date NOT NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL,
 hash_key      varchar(32) NOT NULL,
 CONSTRAINT PK_1 PRIMARY KEY ( name_, parent_ )
);


-- ************************************** load.business_unit
CREATE TABLE load.business_unit
(
 name_           varchar(96) NOT NULL,
 parent_         varchar(96) NOT NULL,
 subsidiary_     varchar(96) NULL,
 nasic_code      varchar(8) NOT NULL,
 model_reference varchar(255) NOT NULL,
 create_date     date NOT NULL,
 created_by      varchar(92) NOT NULL,
 modified_date   date NULL,
 modified_by     varchar(72) NULL,
 source_         varchar(72) NOT NULL

);


-- ************************************** model.business_unit
CREATE TABLE model.business_unit
(
 unit_id       uuid NOT NULL DEFAULT gen_random_uuid(),
 name_         varchar(92) NOT NULL,
 create_date   date NOT NULL DEFAULT CURRENT_DATE,
 created_by    varchar(92) NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL,
 hash_key      varchar(32) NULL,
 CONSTRAINT PK_model_unit PRIMARY KEY ( unit_id )
);


-- ************************************** temp.bill_to
CREATE TABLE temp.bill_to
(
 account_            varchar(48) NOT NULL,
 organization_       varchar(72) NOT NULL,
 subsidiary_         varchar(72) NULL,
 business_unit       varchar(72) NOT NULL,
 plan_               varchar(7) NOT NULL,
 email_              varchar(72) NOT NULL,
 location_           varchar(72) NOT NULL,
 name_               varchar(72) NOT NULL,
 card_               varchar(72) NULL,
 card_expiration     varchar(72) NULL,
 card_csv            varchar(7) NULL,
 purchase_order      varchar(72) NULL,
 "client _reference" varchar(72) NOT NULL

);


-- ************************************** admin.bill_to
CREATE TABLE admin.bill_to
(
 account_            varchar(48) NOT NULL,
 organization_       varchar(72) NOT NULL,
 subsidiary_         varchar(72) NOT NULL,
 business_unit       varchar(72) NOT NULL,
 plan_               varchar(7) NOT NULL,
 email_              varchar(72) NOT NULL,
 location_           varchar(72) NOT NULL,
 name_               varchar(72) NOT NULL,
 card_               varchar(72) NULL,
 card_expiration     varchar(72) NULL,
 card_csv            varchar(7) NULL,
 purchase_order      varchar(72) NULL,
 "client _reference" varchar(72) NOT NULL,
 CONSTRAINT PK_bill_to PRIMARY KEY ( account_ )
);


-- ************************************** interview.author
CREATE TABLE interview.author
(
 author_id     uuid NOT NULL DEFAULT gen_random_uuid(),
 author_name   varchar(92) NOT NULL,
 email_        varchar(48) NOT NULL,
 start_date    date NOT NULL,
 end_date      date NULL,
 create_date   date NOT NULL,
 modified_date date NULL,
 hash_value    bytea NULL,
 CONSTRAINT PK_author_copy_1 PRIMARY KEY ( author_id )
);


-- ************************************** model.author
CREATE TABLE model.author
(
 author_id     uuid NOT NULL DEFAULT gen_random_uuid(),
 author_name   varchar(92) NOT NULL,
 email_        varchar(48) NOT NULL,
 start_date    date NOT NULL,
 end_date      date NULL,
 create_date   date NOT NULL,
 modified_date date NULL,
 hash_value    bytea NULL,
 CONSTRAINT PK_author PRIMARY KEY ( author_id )
);


-- ************************************** temp.admin_account
CREATE TABLE temp.admin_account
(
 name_         varchar(72) NOT NULL,
 email_        varchar(72) NOT NULL,
 air_          varchar(32) NOT NULL,
 login_id      varchar(72) NOT NULL,
 enable_       bit NOT NULL,
 organization_ varchar(72) NULL,
 create_date   date NOT NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL

);


-- ************************************** admin.account
CREATE TABLE admin.account
(
 name_         varchar(72) NOT NULL,
 email_        varchar(72) NOT NULL,
 air_          varchar(32) NOT NULL,
 login_id      varchar(72) NOT NULL,
 enable_       bit NOT NULL,
 organization_ varchar(72) NULL,
 create_date   date NOT NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL,
 CONSTRAINT PK_admin_acct PRIMARY KEY ( name_ )
);


-- ************************************** client.subsidiary
CREATE TABLE client.subsidiary
(
 subsidiary_id      uuid NOT NULL DEFAULT gen_random_uuid(),
 organization_type  varchar(32) NOT NULL,
 parent_id          uuid NOT NULL,
 name_              varchar(96) NOT NULL,
 ticker_            varchar(8) NULL,
 nasic_code         varchar(8) NULL,
 product_service    varchar(128) NULL,
 annual_revenue     numeric(15, 2) NULL,
 employee_total     int NULL,
 website_           varchar(96) NULL,
 location_reference varchar(96) NULL,
 source_            varchar(48) NOT NULL,
 create_date        date NOT NULL DEFAULT CURRENT_DATE,
 created_by         varchar(92) NOT NULL,
 modified_date      date NULL,
 modified_by        varchar(92) NULL,
 CONSTRAINT PK_client_sub PRIMARY KEY ( subsidiary_id ),
 CONSTRAINT FK_subsidiary_parent FOREIGN KEY ( parent_id ) REFERENCES client.parent ( parent_id )
);


-- ************************************** model.discovery
CREATE TABLE model.discovery
(
 model_id               uuid NOT NULL DEFAULT gen_random_uuid(),
 nasic_code             varchar(8) NOT NULL,
 unit_id                uuid NOT NULL,
 role_id                uuid NOT NULL,
 author_id              uuid NOT NULL,
 title_                 varchar(64) NULL,
 model_topic            varchar(64) NULL,
 start_date             date NOT NULL,
 end_date               date NULL,
 submission_approved_by varchar(48) NULL,
 survey_adminstrator    varchar(48) NULL,
 approval_date          date NULL,
 create_date            date NOT NULL DEFAULT CURRENT_DATE,
 modified_date          date NULL,
 submit_date            date NULL,
 hash_value             bytea NULL,
 CONSTRAINT PK_model_discovery PRIMARY KEY ( model_id ),
 CONSTRAINT FK_discovery_author FOREIGN KEY ( author_id ) REFERENCES model.author ( author_id ),
 CONSTRAINT FK_discovery_nasic FOREIGN KEY ( nasic_code ) REFERENCES model.industry ( nasic_code ),
 CONSTRAINT FK_discovery_role FOREIGN KEY ( role_id ) REFERENCES model.role ( role_id ),
 CONSTRAINT FK_discovery_unit FOREIGN KEY ( unit_id ) REFERENCES model.business_unit ( unit_id )
);


-- ************************************** model.question
CREATE TABLE model.question
(
 question_id        uuid NOT NULL,
 model_id           uuid NOT NULL,
 author_id          uuid NOT NULL,
 syntax_            jsonb NOT NULL,
 help_              jsonb NULL,
 sort_order         smallint NOT NULL,
 location_reference varchar(96) NULL,
 create_date        date NOT NULL,
 modified_date      date NULL,
 hash_value         bytea NULL,
 disable_           bit NULL,
 topic_             varchar(96) NULL,
 subtopic_          varchar(96) NULL,
 weight_            numeric(10, 2) NULL,
 CONSTRAINT PK_model_question PRIMARY KEY ( question_id ),
 CONSTRAINT FK_question_author FOREIGN KEY ( author_id ) REFERENCES model.author ( author_id ),
 CONSTRAINT FK_question_model FOREIGN KEY ( model_id ) REFERENCES model.discovery ( model_id )
);


-- ************************************** client.business_unit
CREATE TABLE client.business_unit
(
 unit_id       uuid NOT NULL DEFAULT gen_random_uuid(),
 parent_id     uuid NOT NULL,
 subsidiary_id uuid NULL,
 name_         varchar(96) NOT NULL,
 create_date   date NOT NULL,
 created_by    varchar(92) NOT NULL,
 modified_date date NULL,
 modified_by   varchar(72) NULL,
 source_       varchar(72) NOT NULL,
 CONSTRAINT PK_client_unit PRIMARY KEY ( unit_id ),
 CONSTRAINT FK_client_unit_subsidiary FOREIGN KEY ( subsidiary_id ) REFERENCES client.subsidiary ( subsidiary_id ),
 CONSTRAINT FK_24 FOREIGN KEY ( parent_id ) REFERENCES client.parent ( parent_id )
);

CREATE INDEX FK_clientbizunit ON client.business_unit
(
 parent_id
);


-- ************************************** client.role
CREATE TABLE client.role
(
 role_id            uuid NOT NULL DEFAULT gen_random_uuid(),
 description_       varchar(92) NOT NULL,
 respondent_        varchar(12) NULL,
 project_sponsor    varchar(12) NULL,
 location_reference varchar(96) NULL,
 create_date        date NOT NULL,
 created_by         varchar(92) NULL,
 modified_date      date NULL,
 modified_by        varchar(92) NULL,
 hash_value         bytea NULL,
 unit_id            uuid NULL,
 resource_id        uuid NULL,
 function_id        uuid NULL,
 CONSTRAINT PK_client_role PRIMARY KEY ( role_id ),
 CONSTRAINT FK_role_function FOREIGN KEY ( function_id ) REFERENCES client.function ( function_id ),
 CONSTRAINT FK_role_resource FOREIGN KEY ( resource_id ) REFERENCES client.resource ( resource_id ),
 CONSTRAINT FK_role_unit FOREIGN KEY ( unit_id ) REFERENCES client.business_unit ( unit_id )
);


-- ************************************** interview.question
CREATE TABLE interview.question
(
 question_id       uuid NOT NULL DEFAULT gen_random_uuid(),
 model_question_id uuid NOT NULL,
 author_id         uuid NULL,
 syntax_           jsonb NOT NULL,
 help_             jsonb NULL,
 sort_order        smallint NOT NULL,
 create_date       date NOT NULL,
 modified_date     date NULL,
 disable_          bit NULL,
 topic_            varchar(96) NOT NULL,
 subtopic_         varchar(96) NULL,
 weight_           numeric(10, 2) NULL,
 CONSTRAINT PK_question PRIMARY KEY ( question_id ),
 CONSTRAINT FK_25_1 FOREIGN KEY ( author_id ) REFERENCES interview.author ( author_id ),
 CONSTRAINT FK_25 FOREIGN KEY ( model_question_id ) REFERENCES model.question ( question_id )
);

CREATE INDEX FK_2 ON interview.question
(
 author_id
);

CREATE INDEX FK_intques ON interview.question
(
 model_question_id
);


-- ************************************** interview.respondent
CREATE TABLE interview.respondent
(
 respondent_id      uuid NOT NULL DEFAULT gen_random_uuid(),
 email_             varchar(96) NOT NULL,
 role_id            uuid NOT NULL,
 description_       varchar(92) NULL,
 respondent_        varchar(12) NULL,
 project_sponsor    varchar(12) NULL,
 location_reference varchar(48) NULL,
 first_name         varchar(48) NULL,
 last_name          varchar(32) NULL,
 title_             varchar(64) NULL,
 phone_             varchar(16) NULL,
 create_date        date NOT NULL,
 created_by         varchar(92) NULL,
 modified_date      date NULL,
 modified_by        varchar(92) NULL,
 hash_value         bytea NULL,
 CONSTRAINT PK_respondent PRIMARY KEY ( respondent_id ),
 CONSTRAINT FK_23_1 FOREIGN KEY ( role_id ) REFERENCES client.role ( role_id )
);

CREATE INDEX FK_interviewres ON interview.respondent
(
 role_id
);


-- ************************************** analysis.report
CREATE TABLE analysis.report
(
 report_id uuid NOT NULL,
 role_id   uuid NOT NULL DEFAULT gen_random_uuid(),
 CONSTRAINT PK_1 PRIMARY KEY ( report_id )
);

CREATE INDEX FK_analysisrep ON analysis.report
(
 role_id
);


-- ************************************** interview.question_response_score
CREATE TABLE interview.question_response_score
(
 response_score_id uuid NOT NULL DEFAULT gen_random_uuid(),
 question_id       uuid NOT NULL,
 response_         varchar NOT NULL,
 score_            smallint NOT NULL,
 CONSTRAINT PK_question_response_score PRIMARY KEY ( response_score_id ),
 CONSTRAINT FK_response_score_question FOREIGN KEY ( question_id ) REFERENCES interview.question ( question_id )
);


-- ************************************** client.interview
CREATE TABLE client.interview
(
 interview_id    uuid NOT NULL DEFAULT gen_random_uuid(),
 role_id         uuid NOT NULL,
 request_date    date NULL,
 model_id        uuid NOT NULL,
 cost            decimal(6,2) NULL,
 frequency_      varchar(32) NOT NULL,
 interview_admin varchar(96) NULL,
 approval_date   date NULL,
 start_date      date NULL,
 end_date        date NULL,
 create_date     date NOT NULL DEFAULT CURRENT_DATE,
 modified_date   date NULL,
 created_by      varchar(96) NULL,
 modified_by     varchar(96) NULL,
 author_id       uuid NULL,
 CONSTRAINT PK_31 PRIMARY KEY ( interview_id ),
 CONSTRAINT FK_26_1 FOREIGN KEY ( role_id ) REFERENCES client.role ( role_id ),
 CONSTRAINT FK_23 FOREIGN KEY ( model_id ) REFERENCES model.discovery ( model_id )
);

CREATE INDEX FK_1_clientinterview ON client.interview
(
 role_id
);

CREATE INDEX FK_2_clientint ON client.interview
(
 model_id
);


-- ************************************** interview.schedule
CREATE TABLE interview.schedule
(
 schedule_id  uuid NOT NULL DEFAULT gen_random_uuid(),
 date_value   varchar NOT NULL,
 interview_id uuid NOT NULL,
 CONSTRAINT PK_2_schedule PRIMARY KEY ( schedule_id ),
 CONSTRAINT FK_21 FOREIGN KEY ( interview_id ) REFERENCES client.interview ( interview_id )
);

CREATE INDEX FK_1_schedule ON interview.schedule
(
 interview_id
);


-- ************************************** interview.rating
CREATE TABLE interview.rating
(
 rating_id       uuid NOT NULL DEFAULT gen_random_uuid(),
 rating_value    decimal(3, 2) NOT NULL,
 description_    varchar(48) NOT NULL,
 condition_      varchar(48) NOT NULL,
 condition_value decimal(6, 2) NOT NULL,
 color_          varchar(32) NULL,
 source_         varchar(48) NULL,
 create_date     date NOT NULL,
 modified_date   date NULL,
 hash_value      bytea NULL,
 interview_id    uuid NOT NULL DEFAULT gen_random_uuid(),
 CONSTRAINT PK_2_rating PRIMARY KEY ( rating_id ),
 CONSTRAINT FK_22 FOREIGN KEY ( interview_id ) REFERENCES client.interview ( interview_id )
);

CREATE INDEX FK_1_rating ON interview.rating
(
 interview_id
);


-- ************************************** interview.answer
CREATE TABLE interview.answer
(
 answer_id          uuid NOT NULL DEFAULT gen_random_uuid(),
 question_id        uuid NULL,
 respondent_id      uuid NOT NULL,
 answer_            jsonb NULL,
 answer_date        date NOT NULL,
 score_             smallint NULL,
 location_reference varchar(48) NULL,
 hash_value         bytea NULL,
 CONSTRAINT PK_answer PRIMARY KEY ( answer_id ),
 CONSTRAINT FK_answer_question FOREIGN KEY ( question_id ) REFERENCES interview.question ( question_id ),
 CONSTRAINT FK_answer_respondent FOREIGN KEY ( respondent_id ) REFERENCES interview.respondent ( respondent_id )
);


-- ************************************** interview.answer_in_progress
CREATE TABLE interview.answer_in_progress
(
 progress_id        uuid NOT NULL DEFAULT gen_random_uuid(),
 question_id        uuid NOT NULL,
 answer_id          uuid NOT NULL,
 subimitted_by      varchar(92) NOT NULL,
 answer_            jsonb NULL,
 answer_date        date NOT NULL,
 score_             smallint NULL,
 location_reference varchar(48) NULL,
 hash_value         bytea NULL,
 CONSTRAINT PK_answer_in_progress PRIMARY KEY ( progress_id ),
 CONSTRAINT FK_progress_answer FOREIGN KEY ( answer_id ) REFERENCES interview.answer ( answer_id ),
 CONSTRAINT FK_progress_question FOREIGN KEY ( question_id ) REFERENCES interview.question ( question_id )
);


